name: build_and_deploy

on:
  push:
    branches:
      - "main"

env:
  TAG: $(echo $GITHUB_SHA | head -c7)
  REGISTRY: bindanabendu
  IMAGE: oems
  RELEASE: $(echo $GITHUB_REPOSITORY | cut -d "/" -f2)
  BRANCH: $(echo $GITHUB_REF | cut -d'/' -f 3)"

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Print info
        run: |
          echo $OEMS_DATASOURCE_URL


      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build image
        run: |
          docker build -t ${{ env.IMAGE }}:${{ env.TAG }} . --build-arg GIT_BRANCH=${GITHUB_REF##*/}

      - name: Push image to DockerHUB Container Registry
        run: docker push ${{ env.REGISTRY}}/${{ env.IMAGE }}:${{ env.TAG }}
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.DIGITALOCEAN_VPS_USERNAME }}
          password: ${{ secrets.VPS_SSH_PASSWORD }}
          envs: GITHUB_SHA, REGISTRY, IMAGE, TAG, {{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}, {{ secrets.DOCKER_TOKEN }}, {{ secrets.DOCKER_USERNAME }}
          script: |
            # Login to registry
            echo ${{ secrets.DOCKER_TOKEN }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin
            # Stop running container
            docker stop oems
            # Remove old container
            docker rm oems
            # Run a new container from a new image
            docker run -d \
            --restart always \
            --name oems \
            -p 80:8080 \
            bindanabendu/oems:$(echo $GITHUB_SHA | head -c7)

      - name: Cleanup Old Docker Images
        run: |
          docker image prune -a -f

      - name: Remove Dangling Docker Volumes
        run: |
          docker volume prune -f